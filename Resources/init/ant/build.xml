<?xml version="1.0" encoding="UTF-8"?>
<project default="build" name="name-of-project">

  <target depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit-ci,phpcb" name="build"/>

  <target depends="prepare,lint,tools-parallel,phpunit-ci,phpcb" name="build-parallel"/>

  <target description="Run tools in parallel" name="tools-parallel">
    <parallel threadCount="2">
      <sequential>
        <antcall target="pdepend"/>
        <antcall target="phpmd-ci"/>
      </sequential>
      <antcall target="phpcpd"/>
      <antcall target="phpcs-ci"/>
      <antcall target="phploc"/>
      <antcall target="phpdox"/>
    </parallel>
  </target>

  <target description="Cleanup build artifacts" name="clean">
    <delete dir="${basedir}/build/api"/>
    <delete dir="${basedir}/build/code-browser"/>
    <delete dir="${basedir}/build/coverage"/>
    <delete dir="${basedir}/build/logs"/>
    <delete dir="${basedir}/build/pdepend"/>
    <delete dir="${basedir}/build/phpdox"/>
  </target>

  <target depends="clean" description="Prepare for build" name="prepare">
    <mkdir dir="${basedir}/build/api"/>
    <mkdir dir="${basedir}/build/code-browser"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/build/phpdox"/>
  </target>

  <target description="Perform syntax check of sourcecode files" name="lint">
    <apply executable="php" failonerror="true">
      <arg value="-l"/>
      <fileset dir="${basedir}/src">
        <include name="**/*.php"/>
        <modified/>
      </fileset>
    </apply>
  </target>

  <target description="Measure project size using PHPLOC" name="phploc">
    <exec executable="phploc">
      <arg value="--log-csv"/>
      <arg value="${basedir}/build/logs/phploc.csv"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>

  <target description="Calculate software metrics using PHP_Depend" name="pdepend">
    <exec executable="pdepend">
      <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>

  <target description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing." name="phpmd">
    <exec executable="phpmd">
      <arg path="${basedir}/src"/>
      <arg value="text"/>
      <arg value="${basedir}/build/config/phpmd.xml"/>
    </exec>
  </target>

  <target description="Perform project mess detection using PHPMD creating a log file for the continuous integration server" name="phpmd-ci">
    <exec executable="phpmd">
      <arg path="${basedir}/src"/>
      <arg value="xml"/>
      <arg value="${basedir}/build/config/phpmd.xml"/>
      <arg value="--reportfile"/>
      <arg value="${basedir}/build/logs/pmd.xml"/>
    </exec>
  </target>

  <target description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing." name="phpcs">
    <exec executable="phpcs">
      <arg value="--standard=${basedir}/build/config/phpcs.xml"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>

  <target description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server" name="phpcs-ci">
    <exec executable="phpcs" output="/dev/null">
      <arg value="--report=checkstyle"/>
      <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
      <arg value="--standard=${basedir}/build/config/phpcs.xml"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>

  <target description="Find duplicate code using PHPCPD" name="phpcpd">
    <exec executable="phpcpd">
      <arg value="--log-pmd"/>
      <arg value="${basedir}/build/logs/pmd-cpd.xml"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>

  <target description="Run unit tests with PHPUnit. Intended for usage on the command line" name="phpunit">
    <exec executable="phpunit" failonerror="true">
      <arg value="-c"/>
      <arg path="app"/>
    </exec>
  </target>

  <target description="Run unit tests with PHPUnit. Creating logs/coverage files for the continuous integration server" name="phpunit-ci">
    <exec executable="phpunit" failonerror="true">
      <arg value="-c"/>
      <arg path="app"/>
      <arg value="--coverage-html"/>
      <arg path="build/coverage"/>
      <arg value="--coverage-clover"/>
      <arg path="build/logs/clover.xml"/>
      <arg value="--log-junit"/>
      <arg path="build/logs/junit.xml"/>
    </exec>
  </target>

  <target description="Generate API documentation using phpDox" name="phpdox">
    <exec executable="phpdox">
      <arg value="-f"/>
      <arg path="${basedir}/build/config/phpdox.xml"/>
    </exec>
  </target>

  <target description="Aggregate tool output with PHP_CodeBrowser" name="phpcb">
    <exec executable="phpcb">
      <arg value="--log"/>
      <arg path="${basedir}/build/logs"/>
      <arg value="--source"/>
      <arg path="${basedir}/src"/>
      <arg value="--output"/>
      <arg path="${basedir}/build/code-browser"/>
    </exec>
  </target>

</project>